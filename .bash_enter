########################################################################
# This is a smartcd script.  Commands you type will be run when you
# enter this directory.  The string __PATH__ will be replaced with
# the current path.  Some examples are editing your $PATH or creating
# a temporary alias:
#
#     autostash PATH=__PATH__/bin:$PATH
#     autostash alias restart="service stop; sleep 1; service start"
#
# See http://smartcd.org for more ideas about what can be put here
#######################################################################
BASH_ENTER_ENV_FILE=".bash_enter_env"
cp -n $BASH_ENTER_ENV_FILE.dist $BASH_ENTER_ENV_FILE
[ -f $BASH_ENTER_ENV_FILE ] && . $BASH_ENTER_ENV_FILE

if [ -z "$BASH_ENTER_ALIAS_ONLY" ]; then
  autostash export USER_ID=$(id -u)
  autostash export GROUP_ID=$(id -g)
  autostash export USER_NAME=$(id -un)
  autostash export GROUP_NAME=$(id -gn)
  autostash export HOST_IP=${HOST_IP-127.0.0.1}

  autostash COMPOSE_PROJECT_DIR=$PWD
  autostash DOCKER_VERSION=$(docker --version | sed -rn "s/Docker version (.*?), build .*/\1/p")
  autostash DOCKER_COMPOSE_VERSION=$(docker-compose --version | sed -rn "s/docker-compose version (.*?), build .*/\1/p")

  # Define DOCKER_DEVBOX_ENV to customize environment configuration files
  autostash DOCKER_DEVBOX_ENV="${DOCKER_DEVBOX_ENV:-dev}"

  echo -n "Copying CA Certificates from host to docker build context ... "
  # Copy host CA certificates to .docker directory for usage in Dockerfile
  rm -Rf .docker/.ca-certificates
  mkdir -p .docker/.ca-certificates
  cp -L /etc/ssl/certs/{GFI*.pem,*.local.pem} .docker/.ca-certificates
  for file in .docker/.ca-certificates/*.pem; do
    mv "$file" ".docker/.ca-certificates/$(basename "$file" .pem).crt"
  done
  echo "OK!"

  _docker_devbox_env_symlink() {
    FILEPATH="$1"

    DIRNAME=$(dirname -- "$FILEPATH")
    FILENAME=$(basename -- "$FILEPATH")
    EXTENSION="${FILENAME##*.}"
    FILENAME="${FILENAME%.*}"

    ACTIVE_ENV=0
    MESSAGE="[symlink] $DIRNAME/$FILENAME.$DOCKER_DEVBOX_ENV.$EXTENSION -> $DIRNAME/$FILENAME.$EXTENSION. (Symlink has not been created)"

    for ENV in $DOCKER_DEVBOX_ENV_LIST; do
      if [ "$ENV" = "$DOCKER_DEVBOX_ENV" ]; then
        ACTIVE_ENV=1;
      fi
      if [ $ACTIVE_ENV = 1 ]; then
        if [ -f "$DIRNAME/$FILENAME.$ENV.$EXTENSION" ]; then
          ln -rfs "$DIRNAME/$FILENAME.$ENV.$EXTENSION" "$DIRNAME/$FILENAME.$EXTENSION"
          MESSAGE="[symlink] $DIRNAME/$FILENAME.$ENV.$EXTENSION -> $DIRNAME/$FILENAME.$EXTENSION"
          break
        fi
      fi
    done

    echo "$MESSAGE"
  }

  _docker_devbox_env_symlink "docker-compose.override.yml"
fi

_docker_devbox_map_workdir() {
  CONTAINER_PROJECT_DIR="$1"

  RELATIVE_PATH="${PWD/$COMPOSE_PROJECT_DIR/}"
  CONTAINER_PWD="$CONTAINER_PROJECT_DIR$RELATIVE_PATH"
  echo $CONTAINER_PWD
}

# Commands aliases are automatically generated from functions following this pattern
# _alias_[ALIAS]() { [COMMAND] $@;}

_alias_dc() { docker-compose $@;}
_alias_run() { docker-compose run --rm $@;}

_alias_php() { docker-compose run --rm --user www-data --entrypoint php --workdir="$(_docker_devbox_map_workdir "/var/www/html")" php $@;}
_alias_composer() { docker-compose run --rm --user www-data --entrypoint composer --workdir="$(_docker_devbox_map_workdir "/var/www/html")" php $@;}
_alias_mysql() { docker-compose exec --user root db mysql -uroot -p $@;}

_alias_drush() { docker-compose run --rm --user www-data --entrypoint php --workdir="$(_docker_devbox_map_workdir "/var/www/html/web")" php  ../vendor/drush/drush/drush $@;}
_alias_drupal() { docker-compose run --rm --user root --entrypoint php --workdir="$(_docker_devbox_map_workdir "/var/www/html/web")" php  ../vendor/drupal/console/bin/drupal $@;}

_alias_robo() { docker-compose run --rm --user www-data --entrypoint php --workdir="$(_docker_devbox_map_workdir "/var/www/html")" php  ./vendor/bin/robo $@;}

ALIAS_FUNCTIONS=$(declare -F | sed -r 's/^declare -f //' | awk -F= '/^_?alias_/{print $1 }')
if [ -z "$BASH_ENTER_ALIAS_ONLY" ]; then echo "Commands: "; fi
for func in $ALIAS_FUNCTIONS; do
  autostash alias $(sed -r 's/^_?alias_//' <<< "$func")="$func"
  if [ -z "$BASH_ENTER_ALIAS_ONLY" ]; then echo " - $(sed -r 's/^_?alias_//' <<< "$func")"; fi
done

